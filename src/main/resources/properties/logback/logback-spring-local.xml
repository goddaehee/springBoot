<?xml version="1.0" encoding="UTF-8"?>
<included>
	<logger name="com.zaxxer.hikari" additivity="false" level="DEBUG">
		<appender-ref ref="STDOUT" />
	</logger>
	<!-- SQL 쿼리 문장만 로그로 남긴다. PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
	<logger name="jdbc.sqlonly" additivity="false" level="${log.level.jdbc.sqlonly}" >
		<appender-ref ref="STDOUT" />
	</logger>
	<!--  SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
	<logger name="jdbc.sqltiming" additivity="false" level="${log.level.jdbc.sqltiming}" >
		<appender-ref ref="STDOUT" />
	</logger>
	<!--  SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
	<logger name="jdbc.resultsettable" additivity="false" level="${log.level.jdbc.resultsettable}" >
		<appender-ref ref="STDOUT" />
	</logger>
	<!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
	<logger name="jdbc.audit" additivity="false" level="${log.level.jdbc.audit}" >
		<appender-ref ref="STDOUT" />
	</logger>
	<!--  ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
	<logger name="jdbc.resultset" additivity="false" level="${log.level.jdbc.resultset}" >
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="jdbc.connection" additivity="false" level="${log.level.jdbc.connection}" >
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="requestLogger" additivity="false" level="${ROOT_LOG_LEVEL}">
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="FILE"/>
	</logger>
	<!-- File 로그 -->
	<!--<logger name="gdh.api.core.common" additivity="false" level="${FILE_LOG_LEVEL}">
		<appender-ref ref="FILE_COMMON"/>
		<appender-ref ref="STDOUT" />
	</logger>-->
	<logger name="gdh.api" additivity="false" level="${FILE_LOG_LEVEL}">
		<appender-ref ref="FILE_COMMON"/>
		<appender-ref ref="STDOUT" />
	</logger>
	<root level="${ROOT_LOG_LEVEL}">
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="FILE"/>
	</root>

</included>